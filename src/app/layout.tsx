"use client";

import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import { Provider } from "react-redux";
import { store } from "@/redux/store";
import { PersistGate } from "redux-persist/integration/react";
import { persistStore } from "redux-persist";
import { useEffect } from "react";
import SidebarDrawer from "@/pages/Drawer";
import { redirect, usePathname } from "next/navigation";
const inter = Inter({ subsets: ["latin"] });

const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const persistor = persistStore(store);
  const pathname: any = usePathname();

  const userToken = JSON.parse(localStorage.getItem("userToken") || "{}");

  useEffect(() => {
    if (
      !Object.keys(userToken).length &&
      pathname.split("/").includes("form")
    ) {

      return;
    }
    if (!Object.keys(userToken).length && pathname !== "/") {
      alert("called");
      redirect("/");
    }
  }, []);

  return (
    <html lang="en">
      <body className={inter.className}>
        <Provider store={store}>
          <PersistGate loading={null} persistor={persistor}>
            {!Object.keys(userToken).length &&
            pathname.split("/").includes("form") ? (
              children
            ) : (Object.keys(userToken).length && userToken) ||
              (!Object.keys(userToken).length && pathname !== "/") ? (
              <SidebarDrawer>{children}</SidebarDrawer>
            ) : (
              children
            )}
          </PersistGate>
        </Provider>
      </body>
    </html>
  );
}
